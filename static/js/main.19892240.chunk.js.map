{"version":3,"sources":["Components/Nav/Nav.module.css","Components/Characters/Characters.module.css","Components/Episodes/Episodes.module.css","Components/Header/Header.module.css","folder_UI/img.png","Components/Header/Header.js","Components/Nav/Nav.jsx","Components/Locations/Locations.jsx","Components/MyWatchList/MyWatchList.jsx","Components/Characters/Characters.jsx","Redux/charactersReducer.js","Components/Characters/CharactersContainer.jsx","Components/Episodes/Episodes.jsx","Redux/episodesReducer.js","Components/Episodes/EpisodesContainer.jsx","App.js","reportWebVitals.js","Redux/Store.js","index.js"],"names":["module","exports","Header","className","s","header","src","logo","Nav","nav","item","to","activeClassName","active","Locations","props","MyWatchList","Characters","pages","i","pageCount","push","Grid","container","direction","justify","alignItems","map","p","currentPage","selectedPage","notSelected","onClick","e","onChangeNumber","filters","filter","InputLabel","onChange","filterSpecies","value","defaultValue","filterStatus","characters","u","characterBlock","image","img","name","id","SET_CHARACTERS","SET_CURRENT_PAGE","initialState","totalCharactersCount","charactersReducer","state","action","type","pageNumber","CharactersFun","pageSize","Math","ceil","filtredByStatus","currentCharacters","currentTarget","setCharacters","c","species","axios","get","then","resolve","data","results","slice","info","setCurrentPage","page","this","React","Component","CharactersContainer","connect","charactersPage","Episodes","episodes","length","setEpisodes","a","table","insideTable","air_date","episode","href","url","target","created","SET_EPISODES","episodesReducer","EpisodesContainer","episodesPage","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.19892240.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3Bj6t\",\"item\":\"Nav_item__eCPjY\",\"active\":\"Nav_active__Qmjhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Characters_selectedPage__2z0vl\",\"characterBlock\":\"Characters_characterBlock__3DbHo\",\"filters\":\"Characters_filters__1bONC\",\"filter\":\"Characters_filter__Lj2sM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Episodes_header__3iUmj\",\"table\":\"Episodes_table__P6X3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\"};","export default __webpack_public_path__ + \"static/media/img.946270e8.png\";","import React from 'react';\nimport logo from '../../folder_UI/img.png'\nimport s from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <header className={s.header}>\n            <img src={logo}/>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Nav.module.css';\n\n\nconst Nav = () => {\n    return (\n        <nav className={s.nav}>\n            <div className = {s.item}>\n                <NavLink to = '/Characters' activeClassName = {s.active}>Characters</NavLink>\n            </div>\n            <div className = {s.item}>\n                <NavLink to = '/Episodes' activeClassName = {s.active}>Episodes</NavLink>\n            </div>\n            <div className = {s.item}>\n                <NavLink to = '/Locations' activeClassName = {s.active}>Locations</NavLink>\n            </div>\n            <div className = {s.item}>\n                <NavLink to = '/MyWatchList' activeClassName = {s.active}>My Watch List</NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default Nav","import React from 'react';\nimport s from './Locations.module.css';\n\n\nconst Locations = (props) => {\n    return (\n        <div>\n            Locations\n        </div>\n\n    )\n};\n\nexport default Locations;","import React from 'react';\nimport s from './MyWatchList.module.css';\n\n\nconst MyWatchList = (props) => {\n    return (\n        <div>\n            MyWatchList\n        </div>\n\n    )\n};\n\nexport default MyWatchList;","import React from 'react';\nimport s from './Characters.module.css';\nimport {Grid, InputLabel} from \"@material-ui/core\";\n\n\nconst Characters = (props) => {\n\n    let pages = [];\n\n    for (let i = 1; i <= props.pageCount; i++) {\n        pages.push(i)\n    }\n\n    return <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <div>\n            <div>\n            {pages.map(p => {\n                return <span className= {props.currentPage === p ? s.selectedPage : s.notSelected}\n                             onClick={(e) => props.onChangeNumber(p)}>{p} </span>\n\n            })}\n            </div>\n            <div className={s.filters}>\n        <span className={s.filter}>\n        <InputLabel>Species</InputLabel>\n        <select onChange={props.filterSpecies}>\n            <option value='All' defaultValue >All</option>\n            <option value='Human'>Human</option>\n            <option value='Alien'>Alien</option>\n            <option value='Mythological Creature'>Mythological Creature</option>\n        </select>\n        </span>\n                <span className={s.filter}>\n        <InputLabel>Status</InputLabel>\n        <select onChange={props.filterStatus}>\n            <option value='All' defaultValue>All</option>\n            <option value='Alive'>Alive</option>\n            <option value='Dead'>Dead</option>\n            <option value='Unknown'>Unknown</option>\n        </select>\n        </span>\n            </div>\n        </div>\n        {props.characters.map(u =>\n            <div key={u.id} className={s.characterBlock}>\n                <div>\n                    < img\n                        src={u.image}\n                        className={s.img}/>\n                </div>\n                <div>{u.name}</div>\n\n            </div>\n        )}\n    </Grid>\n\n};\n\nexport default Characters;","const SET_CHARACTERS = 'SET-CHARACTERS'\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\n// const SET_CHARACTERS_TOTAL_COUNT = 'SET-CHARACTERS-TOTAL-COUNT'\n// const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\n\n\nlet initialState = {\n    characters: [\n    ],\n    totalCharactersCount: 671,\n    currentPage: 1,\n}\n\nconst charactersReducer = (state = initialState, action)=> {\n    switch (action.type) {\n        case SET_CHARACTERS:\n            return {...state, characters: [...action.characters]}\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.pageNumber}\n        // case SET_CHARACTERS_TOTAL_COUNT:\n        //     return {...state, totalCharactersCount: action.count}\n        // case TOGGLE_IS_FETCHING:\n        //     return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n}\n\nexport const setCharacters = (characters) => ({type: SET_CHARACTERS, characters})\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber})\n// export const setCharactersTotalCount = (totalCharactersCount) => ({type: SET_CHARACTERS_TOTAL_COUNT, count: totalCharactersCount})\n// export const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\n\n\nexport default charactersReducer","import React from 'react';\nimport axios from \"axios\";\nimport Characters from \"./Characters\";\nimport {connect} from \"react-redux\";\nimport {setCharacters, setCurrentPage} from \"../../Redux/charactersReducer\";\n\n\nclass CharactersFun extends React.Component {\n    pageSize = 10\n    pageCount = Math.ceil(this.props.totalCharactersCount / this.pageSize);\n    filtredByStatus = []\n    currentCharacters = []\n\n\n    componentDidMount() {\n        axios.get(`https://rickandmortyapi.com/api/character/?page=1`)\n            .then(resolve => {\n                this.currentCharacters = resolve.data.results\n                this.props.setCharacters(this.currentCharacters.slice(0, 10))\n                this.props.setCurrentPage(this.props.currentPage)\n            })\n    }\n\n    filterSpecies = (e) => {\n        if (e.currentTarget.value === 'Human') {\n            this.props.setCharacters(this.currentCharacters.filter(c => c.species === 'Human'))\n        } else if (e.currentTarget.value === 'Alien') {\n            this.props.setCharacters(this.currentCharacters.filter(c => c.species === 'Alien'))\n        } else if (e.currentTarget.value === 'Mythological Creature') {\n            this.props.setCharacters(this.currentCharacters.filter(c => c.species === 'Mythological Creature'))\n        } else {\n            this.props.setCharacters(this.currentCharacters)\n        }\n    }\n    filterStatus = (e) => {\n        if (e.currentTarget.value === 'Alive') {\n            axios.get(`https://rickandmortyapi.com/api/character/?page=${this.props.currentPage}&status=alive`)\n                .then(resolve => {\n                    this.filtredByStatus = resolve.data.results\n                    this.props.setCharacters(this.filtredByStatus.slice(0, 10))\n                    this.pageCount = resolve.data.info.pages*2\n                })\n        } else if (e.currentTarget.value === 'Dead') {\n            axios.get(`https://rickandmortyapi.com/api/character/?page=${this.props.currentPage}&status=dead`)\n                .then(resolve => {\n                    this.filtredByStatus = resolve.data.results\n                    this.props.setCharacters(this.filtredByStatus.slice(0, 10))\n                })\n        } else if (e.currentTarget.value === 'Unknown') {\n            axios.get(`https://rickandmortyapi.com/api/character/?page=${this.props.currentPage}&status=unknown`)\n                .then(resolve => {\n                    this.filtredByStatus = resolve.data.results\n                    this.props.setCharacters(this.filtredByStatus.slice(0, 10))\n                })\n        } else { axios.get(`https://rickandmortyapi.com/api/character/?page=${this.props.currentPage}`)\n                .then(resolve => {\n                    this.props.setCharacters(this.currentCharacters.slice(0, 10))\n                })\n        }\n    }\n        // } else if (e.currentTarget.value === 'Dead') {\n        //     this.props.setCharacters(this.currentCharacters.filter(c => c.status === 'Dead'))\n        // } else if (e.currentTarget.value === 'Unknown') {\n        //     this.props.setCharacters(this.currentCharacters.filter(c => c.status === 'Unknown'))\n        // } else {\n        //     this.props.setCharacters(this.currentCharacters)\n        // }\n    onChangeNumber = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        let page = Math.ceil(pageNumber / 2)\n        axios.get(`https://rickandmortyapi.com/api/character/?page=${page}`)\n            .then(resolve => {\n                if (pageNumber % 2 !== 0) {\n                    this.currentCharacters = resolve.data.results.slice(0, 10)\n                    this.props.setCharacters(this.currentCharacters)\n                } else this.currentCharacters = resolve.data.results.slice(10, 20)\n                this.props.setCharacters(this.currentCharacters)\n            })\n    }\n\n\n\n    render() {\n        return <>\n            <Characters totalCharactersCount={this.props.totalCharactersCount}\n                        currentPage={this.props.currentPage}\n                        characters={this.props.characters}\n                        onChangeNumber={this.onChangeNumber}\n                        filterSpecies={this.filterSpecies}\n                        filterStatus={this.filterStatus}\n                        pageCount={this.pageCount}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        characters: state.charactersPage.characters,\n        totalCharactersCount: state.charactersPage.totalCharactersCount,\n        currentPage: state.charactersPage.currentPage\n    }\n}\n\n\nconst CharactersContainer = connect(mapStateToProps, {\n    setCharacters,\n    setCurrentPage,\n})(CharactersFun)\n\nexport default CharactersContainer;","import React from 'react';\nimport axios from \"axios\";\nimport {Grid} from \"@material-ui/core\";\nimport s from './Episodes.module.css'\n\n\nconst Episodes = (props) => {\n    let page\n    if (props.episodes.length === 0) {\n        axios.get(`https://rickandmortyapi.com/api/episode/?page=${props.currentPage}`)\n            .then(resolve => {props.setEpisodes(resolve.data.results)\n            })}\nlet a = [...props.episodes]\n\n    return <div>\n<span>{props.currentPage}</span>\n        <div className={s.table}  >\n            <tr className={s.header}>\n                <th>name </th>\n                <th>air_date </th>\n                <th>episode </th>\n                {/*<th>characters </th>*/}\n                <th>url </th>\n                <th>created </th>\n            </tr>\n        {a.map(u =>\n            <tr key={u.id} className={s.insideTable}>\n            <td>{u.name} </td>\n            <td>{u.air_date} </td>\n            <td>{u.episode} </td>\n            {/*<td>{u.characters} </td>*/}\n            <td><a href={u.url} target=\"_blank\">watch</a></td>\n            <td>{u.created} </td>\n            </tr>\n        )}\n    </div>\n    </div>\n};\n\nexport default Episodes;","// const FOLLOW = 'FOLLOW'\n// const UNFOLLOW = 'UNFOLLOW'\nconst SET_EPISODES = 'SET-EPISODES'\n// const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\n// const SET_CHARACTERS_TOTAL_COUNT = 'SET-CHARACTERS-TOTAL-COUNT'\n// const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\n\n\nlet initialState = {\n    episodes: [],\n    pageSize: 25,\n    // totalCharactersCount: 671,\n    currentPage: 1,\n}\n\nconst episodesReducer = (state = initialState, action)=> {\n    switch (action.type) {\n        // case FOLLOW:\n        //     return {\n        //         ...state,\n        //         users: state.users.map(u => {\n        //             if (u.id === action.userID) {\n        //                 return {...u, followed: false}\n        //             }\n        //             return u\n        //         })\n        //     }\n        // case UNFOLLOW:\n        //     return {\n        //         ...state,\n        //         users: state.users.map(u => {\n        //             if (u.id === action.userID) {\n        //                 return {...u, followed: true}\n        //             }\n        //             return u\n        //         })\n        //     }\n        case SET_EPISODES:\n            return {...state, episodes: [...action.episodes]}\n        // case SET_CURRENT_PAGE:\n        //     return {...state, currentPage: action.currentPage}\n        // case SET_CHARACTERS_TOTAL_COUNT:\n        //     return {...state, totalCharactersCount: action.count}\n        // case TOGGLE_IS_FETCHING:\n        //     return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n}\n\n// export const follow = (userID: number) => ({type: FOLLOW, userID} as const)\n// export const unfollow = (userID: number) => ({type: UNFOLLOW, userID} as const)\nexport const setEpisodes = (episodes) => ({type: SET_EPISODES, episodes})\n// export const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\n// export const setCharactersTotalCount = (totalCharactersCount) => ({type: SET_CHARACTERS_TOTAL_COUNT, count: totalCharactersCount})\n// export const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\n\n\nexport default episodesReducer","import React from 'react';\nimport Episodes from \"./Episodes\";\nimport {connect} from \"react-redux\";\nimport {setEpisodes} from \"../../Redux/episodesReducer\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        episodes: state.episodesPage.episodes,\n        // totalCharactersCount: state.charactersPage.totalCharactersCount,\n\n    }\n}\n\n\nconst EpisodesContainer = connect(mapStateToProps, {\n    setEpisodes,\n    // setCurrentPage,\n    // setCharactersTotalCount\n})(Episodes)\n\nexport default EpisodesContainer;","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Nav from './Components/Nav/Nav';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Locations from './Components/Locations/Locations';\nimport MyWatchList from './Components/MyWatchList/MyWatchList';\nimport CharactersContainer from \"./Components/Characters/CharactersContainer\";\nimport EpisodesContainer from \"./Components/Episodes/EpisodesContainer\";\n\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <Header />\n                <Nav />\n                <div className='app-wrapper-content'>\n                    <Route path = '/Characters' render = {() => <CharactersContainer/>} />\n                    <Route path = '/Episodes' render = {() => <EpisodesContainer/>} />\n                    <Route path = '/Locations' render = {() => <Locations/>} />\n                    <Route path = '/MyWatchList' render = {() => <MyWatchList/>} />\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import charactersReducer from \"./charactersReducer\";\nimport episodesReducer from \"./episodesReducer\";\nimport {combineReducers, createStore} from \"redux\";\n\n\nexport const rootReducer = combineReducers({\n    charactersPage: charactersReducer,\n    episodesPage: episodesReducer,\n    // locationsPage: locationsReducer,\n    // myWatchListPage: myWatchListReducer\n})\nlet store =  createStore(rootReducer)\nexport  default store","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport store from \"./Redux/Store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store} >\n                    <App />\n                </Provider>\n            </ BrowserRouter>,\n        </React.StrictMode>, document.getElementById('root'));\n}\nrerenderEntireTree(store.getState())\nstore.subscribe(() => {\n    let state = store.getState();\n    rerenderEntireTree(state)\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}